set hive.strict.checks.type.safety=false;


-- 表单A和表单B的交集差异明细
select single_diff,a_single_detail,b_single_detail,a_trace_id,b_trace_id,a_risk_flow_id,b_risk_flow_id,a_flow_name,b_flow_name,a_scope,b_scope,a_event_id,b_event_id,a_event_name,b_event_name,a_user_info,b_user_info,a_order_id,b_order_id,a_loan_account_id,b_loan_account_id,a_mobile_number,b_mobile_number,a_identity_number,b_identity_number,a_sdk_type,b_sdk_type,a_app_type,b_app_type,a_drools_inparam,b_drools_inparam,a_drools_outparam,b_drools_outparam,a_customized_data,b_customized_data,a_model_version_decision,b_model_version_decision,a_action_type,b_action_type,a_reject_tag,b_reject_tag,a_antifraud_cut,b_antifraud_cut,a_retrieve_cut,b_retrieve_cut,a_result_data,b_result_data,a_status,b_status,a_credits,b_credits,a_dynamic_totalcredit,b_dynamic_total_credits,a_risk_group,b_risk_group,a_loan_tag,b_loan_tag,a_reloan_tag,b_reloan_tag,a_expire_days,b_expire_days,a_products,b_products,a_result_droolsdata,b_result_droolsdata,a_result_actiondata,b_result_actiondata,a_if_offline_review,b_if_offline_review,a_created_ts,b_created_ts,a_updated_ts,b_updated_ts,a_trace_run_type,b_trace_run_type,a_offline_type,b_offline_type,a_scope_desc,b_scope_desc,rowNum from (select split(single_diff,'&#')[0] as single_diff,split(single_diff,'&#')[1] as a_single_detail,split(single_diff,'&#')[2] as b_single_detail,a_trace_id,b_trace_id,a_risk_flow_id,b_risk_flow_id,a_flow_name,b_flow_name,a_scope,b_scope,a_event_id,b_event_id,a_event_name,b_event_name,a_user_info,b_user_info,a_order_id,b_order_id,a_loan_account_id,b_loan_account_id,a_mobile_number,b_mobile_number,a_identity_number,b_identity_number,a_sdk_type,b_sdk_type,a_app_type,b_app_type,a_drools_inparam,b_drools_inparam,a_drools_outparam,b_drools_outparam,a_customized_data,b_customized_data,a_model_version_decision,b_model_version_decision,a_action_type,b_action_type,a_reject_tag,b_reject_tag,a_antifraud_cut,b_antifraud_cut,a_retrieve_cut,b_retrieve_cut,a_result_data,b_result_data,a_status,b_status,a_credits,b_credits,a_dynamic_totalcredit,b_dynamic_total_credits,a_risk_group,b_risk_group,a_loan_tag,b_loan_tag,a_reloan_tag,b_reloan_tag,a_expire_days,b_expire_days,a_products,b_products,a_result_droolsdata,b_result_droolsdata,a_result_actiondata,b_result_actiondata,a_if_offline_review,b_if_offline_review,a_created_ts,b_created_ts,a_updated_ts,b_updated_ts,a_trace_run_type,b_trace_run_type,a_offline_type,b_offline_type,a_scope_desc,b_scope_desc,row_number() over (partition by split(single_diff,'&#')[0]) rowNum from (select a_trace_id,b_trace_id,a_risk_flow_id,b_risk_flow_id,a_flow_name,b_flow_name,a_scope,b_scope,a_event_id,b_event_id,a_event_name,b_event_name,a_user_info,b_user_info,a_order_id,b_order_id,a_loan_account_id,b_loan_account_id,a_mobile_number,b_mobile_number,a_identity_number,b_identity_number,a_sdk_type,b_sdk_type,a_app_type,b_app_type,a_drools_inparam,b_drools_inparam,a_drools_outparam,b_drools_outparam,a_customized_data,b_customized_data,a_model_version_decision,b_model_version_decision,a_action_type,b_action_type,a_reject_tag,b_reject_tag,a_antifraud_cut,b_antifraud_cut,a_retrieve_cut,b_retrieve_cut,a_result_data,b_result_data,a_status,b_status,a_credits,b_credits,a_dynamic_totalcredit,b_dynamic_total_credits,a_risk_group,b_risk_group,a_loan_tag,b_loan_tag,a_reloan_tag,b_reloan_tag,a_expire_days,b_expire_days,a_products,b_products,a_result_droolsdata,b_result_droolsdata,a_result_actiondata,b_result_actiondata,a_if_offline_review,b_if_offline_review,a_created_ts,b_created_ts,a_updated_ts,b_updated_ts,a_trace_run_type,b_trace_run_type,a_offline_type,b_offline_type,a_scope_desc,b_scope_desc,single_diff from (select a.trace_id as a_trace_id,b.trace_id as b_trace_id,a.risk_flow_id as a_risk_flow_id,b.risk_flow_id as b_risk_flow_id,a.flow_name as a_flow_name,b.flow_name as b_flow_name,a.scope as a_scope,b.scope as b_scope,a.event_id as a_event_id,b.event_id as b_event_id,a.event_name as a_event_name,b.event_name as b_event_name,a.user_info as a_user_info,b.user_info as b_user_info,a.order_id as a_order_id,b.order_id as b_order_id,a.loan_account_id as a_loan_account_id,b.loan_account_id as b_loan_account_id,a.mobile_number as a_mobile_number,b.mobile_number as b_mobile_number,a.identity_number as a_identity_number,b.identity_number as b_identity_number,a.sdk_type as a_sdk_type,b.sdk_type as b_sdk_type,a.app_type as a_app_type,b.app_type as b_app_type,a.drools_inparam as a_drools_inparam,b.drools_inparam as b_drools_inparam,a.drools_outparam as a_drools_outparam,b.drools_outparam as b_drools_outparam,a.customized_data as a_customized_data,b.customized_data as b_customized_data,a.model_version_decision as a_model_version_decision,b.model_version_decision as b_model_version_decision,a.action_type as a_action_type,b.action_type as b_action_type,a.reject_tag as a_reject_tag,b.reject_tag as b_reject_tag,a.antifraud_cut as a_antifraud_cut,b.antifraud_cut as b_antifraud_cut,a.retrieve_cut as a_retrieve_cut,b.retrieve_cut as b_retrieve_cut,a.result_data as a_result_data,b.result_data as b_result_data,a.status as a_status,b.status as b_status,a.credits as a_credits,b.credits as b_credits,a.dynamic_totalcredit as a_dynamic_totalcredit,b.dynamic_total_credits as b_dynamic_total_credits,a.risk_group as a_risk_group,b.risk_group as b_risk_group,a.loan_tag as a_loan_tag,b.loan_tag as b_loan_tag,a.reloan_tag as a_reloan_tag,b.reloan_tag as b_reloan_tag,a.expire_days as a_expire_days,b.expire_days as b_expire_days,a.products as a_products,b.products as b_products,a.result_droolsdata as a_result_droolsdata,b.result_droolsdata as b_result_droolsdata,a.result_actiondata as a_result_actiondata,b.result_actiondata as b_result_actiondata,a.if_offline_review as a_if_offline_review,b.if_offline_review as b_if_offline_review,a.created_ts as a_created_ts,b.created_ts as b_created_ts,a.updated_ts as a_updated_ts,b.updated_ts as b_updated_ts,a.trace_run_type as a_trace_run_type,b.trace_run_type as b_trace_run_type,a.offline_type as a_offline_type,b.offline_type as b_offline_type,a.scope_desc as a_scope_desc,b.scope_desc as b_scope_desc, concat_ws('&!',if(case when a.trace_id is null and b.trace_id is null then false else nvl(a.trace_id != b.trace_id, True) end,concat_ws('&#','a_trace_id',nvl(string(a.trace_id),'值为null'),string(b.trace_id)),null),if(case when a.risk_flow_id is null and b.risk_flow_id is null then false else nvl(a.risk_flow_id != b.risk_flow_id, True) end,concat_ws('&#','a_risk_flow_id',nvl(string(a.risk_flow_id),'值为null'),string(b.risk_flow_id)),null),if(case when a.flow_name is null and b.flow_name is null then false else nvl(a.flow_name != b.flow_name, True) end,concat_ws('&#','a_flow_name',nvl(string(a.flow_name),'值为null'),string(b.flow_name)),null),if(case when a.scope is null and b.scope is null then false else nvl(a.scope != b.scope, True) end,concat_ws('&#','a_scope',nvl(string(a.scope),'值为null'),string(b.scope)),null),if(case when a.event_id is null and b.event_id is null then false else nvl(a.event_id != b.event_id, True) end,concat_ws('&#','a_event_id',nvl(string(a.event_id),'值为null'),string(b.event_id)),null),if(case when a.event_name is null and b.event_name is null then false else nvl(a.event_name != b.event_name, True) end,concat_ws('&#','a_event_name',nvl(string(a.event_name),'值为null'),string(b.event_name)),null),if(case when a.user_info is null and b.user_info is null then false else nvl(a.user_info != b.user_info, True) end,concat_ws('&#','a_user_info',nvl(string(a.user_info),'值为null'),string(b.user_info)),null),if(case when a.order_id is null and b.order_id is null then false else nvl(a.order_id != b.order_id, True) end,concat_ws('&#','a_order_id',nvl(string(a.order_id),'值为null'),string(b.order_id)),null),if(case when a.loan_account_id is null and b.loan_account_id is null then false else nvl(a.loan_account_id != b.loan_account_id, True) end,concat_ws('&#','a_loan_account_id',nvl(string(a.loan_account_id),'值为null'),string(b.loan_account_id)),null),if(case when a.mobile_number is null and b.mobile_number is null then false else nvl(a.mobile_number != b.mobile_number, True) end,concat_ws('&#','a_mobile_number',nvl(string(a.mobile_number),'值为null'),string(b.mobile_number)),null),if(case when a.identity_number is null and b.identity_number is null then false else nvl(a.identity_number != b.identity_number, True) end,concat_ws('&#','a_identity_number',nvl(string(a.identity_number),'值为null'),string(b.identity_number)),null),if(case when a.sdk_type is null and b.sdk_type is null then false else nvl(a.sdk_type != b.sdk_type, True) end,concat_ws('&#','a_sdk_type',nvl(string(a.sdk_type),'值为null'),string(b.sdk_type)),null),if(case when a.app_type is null and b.app_type is null then false else nvl(a.app_type != b.app_type, True) end,concat_ws('&#','a_app_type',nvl(string(a.app_type),'值为null'),string(b.app_type)),null),if(case when a.drools_inparam is null and b.drools_inparam is null then false else nvl(a.drools_inparam != b.drools_inparam, True) end,concat_ws('&#','a_drools_inparam',nvl(string(a.drools_inparam),'值为null'),string(b.drools_inparam)),null),if(case when a.drools_outparam is null and b.drools_outparam is null then false else nvl(a.drools_outparam != b.drools_outparam, True) end,concat_ws('&#','a_drools_outparam',nvl(string(a.drools_outparam),'值为null'),string(b.drools_outparam)),null),if(case when a.customized_data is null and b.customized_data is null then false else nvl(a.customized_data != b.customized_data, True) end,concat_ws('&#','a_customized_data',nvl(string(a.customized_data),'值为null'),string(b.customized_data)),null),if(case when a.model_version_decision is null and b.model_version_decision is null then false else nvl(a.model_version_decision != b.model_version_decision, True) end,concat_ws('&#','a_model_version_decision',nvl(string(a.model_version_decision),'值为null'),string(b.model_version_decision)),null),if(case when a.action_type is null and b.action_type is null then false else nvl(a.action_type != b.action_type, True) end,concat_ws('&#','a_action_type',nvl(string(a.action_type),'值为null'),string(b.action_type)),null),if(case when a.reject_tag is null and b.reject_tag is null then false else nvl(a.reject_tag != b.reject_tag, True) end,concat_ws('&#','a_reject_tag',nvl(string(a.reject_tag),'值为null'),string(b.reject_tag)),null),if(case when a.antifraud_cut is null and b.antifraud_cut is null then false else nvl(a.antifraud_cut != b.antifraud_cut, True) end,concat_ws('&#','a_antifraud_cut',nvl(string(a.antifraud_cut),'值为null'),string(b.antifraud_cut)),null),if(case when a.retrieve_cut is null and b.retrieve_cut is null then false else nvl(a.retrieve_cut != b.retrieve_cut, True) end,concat_ws('&#','a_retrieve_cut',nvl(string(a.retrieve_cut),'值为null'),string(b.retrieve_cut)),null),if(case when a.result_data is null and b.result_data is null then false else nvl(a.result_data != b.result_data, True) end,concat_ws('&#','a_result_data',nvl(string(a.result_data),'值为null'),string(b.result_data)),null),if(case when a.status is null and b.status is null then false else nvl(a.status != b.status, True) end,concat_ws('&#','a_status',nvl(string(a.status),'值为null'),string(b.status)),null),if(case when a.credits is null and b.credits is null then false else nvl(a.credits != b.credits, True) end,concat_ws('&#','a_credits',nvl(string(a.credits),'值为null'),string(b.credits)),null),if(case when a.dynamic_totalcredit is null and b.dynamic_total_credits is null then false else nvl(a.dynamic_totalcredit != b.dynamic_total_credits, True) end,concat_ws('&#','a_dynamic_totalcredit',nvl(string(a.dynamic_totalcredit),'值为null'),string(b.dynamic_total_credits)),null),if(case when a.risk_group is null and b.risk_group is null then false else nvl(a.risk_group != b.risk_group, True) end,concat_ws('&#','a_risk_group',nvl(string(a.risk_group),'值为null'),string(b.risk_group)),null),if(case when a.loan_tag is null and b.loan_tag is null then false else nvl(a.loan_tag != b.loan_tag, True) end,concat_ws('&#','a_loan_tag',nvl(string(a.loan_tag),'值为null'),string(b.loan_tag)),null),if(case when a.reloan_tag is null and b.reloan_tag is null then false else nvl(a.reloan_tag != b.reloan_tag, True) end,concat_ws('&#','a_reloan_tag',nvl(string(a.reloan_tag),'值为null'),string(b.reloan_tag)),null),if(case when a.expire_days is null and b.expire_days is null then false else nvl(a.expire_days != b.expire_days, True) end,concat_ws('&#','a_expire_days',nvl(string(a.expire_days),'值为null'),string(b.expire_days)),null),if(case when a.products is null and b.products is null then false else nvl(a.products != b.products, True) end,concat_ws('&#','a_products',nvl(string(a.products),'值为null'),string(b.products)),null),if(case when a.result_droolsdata is null and b.result_droolsdata is null then false else nvl(a.result_droolsdata != b.result_droolsdata, True) end,concat_ws('&#','a_result_droolsdata',nvl(string(a.result_droolsdata),'值为null'),string(b.result_droolsdata)),null),if(case when a.result_actiondata is null and b.result_actiondata is null then false else nvl(a.result_actiondata != b.result_actiondata, True) end,concat_ws('&#','a_result_actiondata',nvl(string(a.result_actiondata),'值为null'),string(b.result_actiondata)),null),if(case when a.if_offline_review is null and b.if_offline_review is null then false else nvl(a.if_offline_review != b.if_offline_review, True) end,concat_ws('&#','a_if_offline_review',nvl(string(a.if_offline_review),'值为null'),string(b.if_offline_review)),null),if(case when a.created_ts is null and b.created_ts is null then false else nvl(a.created_ts != b.created_ts, True) end,concat_ws('&#','a_created_ts',nvl(string(a.created_ts),'值为null'),string(b.created_ts)),null),if(case when a.updated_ts is null and b.updated_ts is null then false else nvl(a.updated_ts != b.updated_ts, True) end,concat_ws('&#','a_updated_ts',nvl(string(a.updated_ts),'值为null'),string(b.updated_ts)),null),if(case when a.trace_run_type is null and b.trace_run_type is null then false else nvl(a.trace_run_type != b.trace_run_type, True) end,concat_ws('&#','a_trace_run_type',nvl(string(a.trace_run_type),'值为null'),string(b.trace_run_type)),null),if(case when a.offline_type is null and b.offline_type is null then false else nvl(a.offline_type != b.offline_type, True) end,concat_ws('&#','a_offline_type',nvl(string(a.offline_type),'值为null'),string(b.offline_type)),null),if(case when a.scope_desc is null and b.scope_desc is null then false else nvl(a.scope_desc != b.scope_desc, True) end,concat_ws('&#','a_scope_desc',nvl(string(a.scope_desc),'值为null'),string(b.scope_desc)),null)) as diff from dwd.dwd_risk_df_risk_flow_trace_process as a inner join test.dwd_risk_df_risk_old_flow_decision as b on a.trace_id=b.trace_id where 1=1 and (case when a.trace_id is null and b.trace_id is null then false else nvl(a.trace_id != b.trace_id, True) end or case when a.risk_flow_id is null and b.risk_flow_id is null then false else nvl(a.risk_flow_id != b.risk_flow_id, True) end or case when a.flow_name is null and b.flow_name is null then false else nvl(a.flow_name != b.flow_name, True) end or case when a.scope is null and b.scope is null then false else nvl(a.scope != b.scope, True) end or case when a.event_id is null and b.event_id is null then false else nvl(a.event_id != b.event_id, True) end or case when a.event_name is null and b.event_name is null then false else nvl(a.event_name != b.event_name, True) end or case when a.user_info is null and b.user_info is null then false else nvl(a.user_info != b.user_info, True) end or case when a.order_id is null and b.order_id is null then false else nvl(a.order_id != b.order_id, True) end or case when a.loan_account_id is null and b.loan_account_id is null then false else nvl(a.loan_account_id != b.loan_account_id, True) end or case when a.mobile_number is null and b.mobile_number is null then false else nvl(a.mobile_number != b.mobile_number, True) end or case when a.identity_number is null and b.identity_number is null then false else nvl(a.identity_number != b.identity_number, True) end or case when a.sdk_type is null and b.sdk_type is null then false else nvl(a.sdk_type != b.sdk_type, True) end or case when a.app_type is null and b.app_type is null then false else nvl(a.app_type != b.app_type, True) end or case when a.drools_inparam is null and b.drools_inparam is null then false else nvl(a.drools_inparam != b.drools_inparam, True) end or case when a.drools_outparam is null and b.drools_outparam is null then false else nvl(a.drools_outparam != b.drools_outparam, True) end or case when a.customized_data is null and b.customized_data is null then false else nvl(a.customized_data != b.customized_data, True) end or case when a.model_version_decision is null and b.model_version_decision is null then false else nvl(a.model_version_decision != b.model_version_decision, True) end or case when a.action_type is null and b.action_type is null then false else nvl(a.action_type != b.action_type, True) end or case when a.reject_tag is null and b.reject_tag is null then false else nvl(a.reject_tag != b.reject_tag, True) end or case when a.antifraud_cut is null and b.antifraud_cut is null then false else nvl(a.antifraud_cut != b.antifraud_cut, True) end or case when a.retrieve_cut is null and b.retrieve_cut is null then false else nvl(a.retrieve_cut != b.retrieve_cut, True) end or case when a.result_data is null and b.result_data is null then false else nvl(a.result_data != b.result_data, True) end or case when a.status is null and b.status is null then false else nvl(a.status != b.status, True) end or case when a.credits is null and b.credits is null then false else nvl(a.credits != b.credits, True) end or case when a.dynamic_totalcredit is null and b.dynamic_total_credits is null then false else nvl(a.dynamic_totalcredit != b.dynamic_total_credits, True) end or case when a.risk_group is null and b.risk_group is null then false else nvl(a.risk_group != b.risk_group, True) end or case when a.loan_tag is null and b.loan_tag is null then false else nvl(a.loan_tag != b.loan_tag, True) end or case when a.reloan_tag is null and b.reloan_tag is null then false else nvl(a.reloan_tag != b.reloan_tag, True) end or case when a.expire_days is null and b.expire_days is null then false else nvl(a.expire_days != b.expire_days, True) end or case when a.products is null and b.products is null then false else nvl(a.products != b.products, True) end or case when a.result_droolsdata is null and b.result_droolsdata is null then false else nvl(a.result_droolsdata != b.result_droolsdata, True) end or case when a.result_actiondata is null and b.result_actiondata is null then false else nvl(a.result_actiondata != b.result_actiondata, True) end or case when a.if_offline_review is null and b.if_offline_review is null then false else nvl(a.if_offline_review != b.if_offline_review, True) end or case when a.created_ts is null and b.created_ts is null then false else nvl(a.created_ts != b.created_ts, True) end or case when a.updated_ts is null and b.updated_ts is null then false else nvl(a.updated_ts != b.updated_ts, True) end or case when a.trace_run_type is null and b.trace_run_type is null then false else nvl(a.trace_run_type != b.trace_run_type, True) end or case when a.offline_type is null and b.offline_type is null then false else nvl(a.offline_type != b.offline_type, True) end or case when a.scope_desc is null and b.scope_desc is null then false else nvl(a.scope_desc != b.scope_desc, True) end) and a.dt = '20221009' and 1=1) t lateral VIEW explode(split(diff, '&!')) tmp_diff as single_diff) t) t where rowNum <= 50 limit 5000;


-- 表单A和表单B的交集差异数量统计
select t.single_diff,count(*) as numbers from (select a_trace_id,b_trace_id,a_risk_flow_id,b_risk_flow_id,a_flow_name,b_flow_name,a_scope,b_scope,a_event_id,b_event_id,a_event_name,b_event_name,a_user_info,b_user_info,a_order_id,b_order_id,a_loan_account_id,b_loan_account_id,a_mobile_number,b_mobile_number,a_identity_number,b_identity_number,a_sdk_type,b_sdk_type,a_app_type,b_app_type,a_drools_inparam,b_drools_inparam,a_drools_outparam,b_drools_outparam,a_customized_data,b_customized_data,a_model_version_decision,b_model_version_decision,a_action_type,b_action_type,a_reject_tag,b_reject_tag,a_antifraud_cut,b_antifraud_cut,a_retrieve_cut,b_retrieve_cut,a_result_data,b_result_data,a_status,b_status,a_credits,b_credits,a_dynamic_totalcredit,b_dynamic_total_credits,a_risk_group,b_risk_group,a_loan_tag,b_loan_tag,a_reloan_tag,b_reloan_tag,a_expire_days,b_expire_days,a_products,b_products,a_result_droolsdata,b_result_droolsdata,a_result_actiondata,b_result_actiondata,a_if_offline_review,b_if_offline_review,a_created_ts,b_created_ts,a_updated_ts,b_updated_ts,a_trace_run_type,b_trace_run_type,a_offline_type,b_offline_type,a_scope_desc,b_scope_desc,single_diff from (select a.trace_id as a_trace_id,b.trace_id as b_trace_id,a.risk_flow_id as a_risk_flow_id,b.risk_flow_id as b_risk_flow_id,a.flow_name as a_flow_name,b.flow_name as b_flow_name,a.scope as a_scope,b.scope as b_scope,a.event_id as a_event_id,b.event_id as b_event_id,a.event_name as a_event_name,b.event_name as b_event_name,a.user_info as a_user_info,b.user_info as b_user_info,a.order_id as a_order_id,b.order_id as b_order_id,a.loan_account_id as a_loan_account_id,b.loan_account_id as b_loan_account_id,a.mobile_number as a_mobile_number,b.mobile_number as b_mobile_number,a.identity_number as a_identity_number,b.identity_number as b_identity_number,a.sdk_type as a_sdk_type,b.sdk_type as b_sdk_type,a.app_type as a_app_type,b.app_type as b_app_type,a.drools_inparam as a_drools_inparam,b.drools_inparam as b_drools_inparam,a.drools_outparam as a_drools_outparam,b.drools_outparam as b_drools_outparam,a.customized_data as a_customized_data,b.customized_data as b_customized_data,a.model_version_decision as a_model_version_decision,b.model_version_decision as b_model_version_decision,a.action_type as a_action_type,b.action_type as b_action_type,a.reject_tag as a_reject_tag,b.reject_tag as b_reject_tag,a.antifraud_cut as a_antifraud_cut,b.antifraud_cut as b_antifraud_cut,a.retrieve_cut as a_retrieve_cut,b.retrieve_cut as b_retrieve_cut,a.result_data as a_result_data,b.result_data as b_result_data,a.status as a_status,b.status as b_status,a.credits as a_credits,b.credits as b_credits,a.dynamic_totalcredit as a_dynamic_totalcredit,b.dynamic_total_credits as b_dynamic_total_credits,a.risk_group as a_risk_group,b.risk_group as b_risk_group,a.loan_tag as a_loan_tag,b.loan_tag as b_loan_tag,a.reloan_tag as a_reloan_tag,b.reloan_tag as b_reloan_tag,a.expire_days as a_expire_days,b.expire_days as b_expire_days,a.products as a_products,b.products as b_products,a.result_droolsdata as a_result_droolsdata,b.result_droolsdata as b_result_droolsdata,a.result_actiondata as a_result_actiondata,b.result_actiondata as b_result_actiondata,a.if_offline_review as a_if_offline_review,b.if_offline_review as b_if_offline_review,a.created_ts as a_created_ts,b.created_ts as b_created_ts,a.updated_ts as a_updated_ts,b.updated_ts as b_updated_ts,a.trace_run_type as a_trace_run_type,b.trace_run_type as b_trace_run_type,a.offline_type as a_offline_type,b.offline_type as b_offline_type,a.scope_desc as a_scope_desc,b.scope_desc as b_scope_desc, concat_ws('&!',if(case when a.trace_id is null and b.trace_id is null then false else nvl(a.trace_id != b.trace_id, True) end,concat_ws('&#','a_trace_id',nvl(string(a.trace_id),'值为null'),string(b.trace_id)),null),if(case when a.risk_flow_id is null and b.risk_flow_id is null then false else nvl(a.risk_flow_id != b.risk_flow_id, True) end,concat_ws('&#','a_risk_flow_id',nvl(string(a.risk_flow_id),'值为null'),string(b.risk_flow_id)),null),if(case when a.flow_name is null and b.flow_name is null then false else nvl(a.flow_name != b.flow_name, True) end,concat_ws('&#','a_flow_name',nvl(string(a.flow_name),'值为null'),string(b.flow_name)),null),if(case when a.scope is null and b.scope is null then false else nvl(a.scope != b.scope, True) end,concat_ws('&#','a_scope',nvl(string(a.scope),'值为null'),string(b.scope)),null),if(case when a.event_id is null and b.event_id is null then false else nvl(a.event_id != b.event_id, True) end,concat_ws('&#','a_event_id',nvl(string(a.event_id),'值为null'),string(b.event_id)),null),if(case when a.event_name is null and b.event_name is null then false else nvl(a.event_name != b.event_name, True) end,concat_ws('&#','a_event_name',nvl(string(a.event_name),'值为null'),string(b.event_name)),null),if(case when a.user_info is null and b.user_info is null then false else nvl(a.user_info != b.user_info, True) end,concat_ws('&#','a_user_info',nvl(string(a.user_info),'值为null'),string(b.user_info)),null),if(case when a.order_id is null and b.order_id is null then false else nvl(a.order_id != b.order_id, True) end,concat_ws('&#','a_order_id',nvl(string(a.order_id),'值为null'),string(b.order_id)),null),if(case when a.loan_account_id is null and b.loan_account_id is null then false else nvl(a.loan_account_id != b.loan_account_id, True) end,concat_ws('&#','a_loan_account_id',nvl(string(a.loan_account_id),'值为null'),string(b.loan_account_id)),null),if(case when a.mobile_number is null and b.mobile_number is null then false else nvl(a.mobile_number != b.mobile_number, True) end,concat_ws('&#','a_mobile_number',nvl(string(a.mobile_number),'值为null'),string(b.mobile_number)),null),if(case when a.identity_number is null and b.identity_number is null then false else nvl(a.identity_number != b.identity_number, True) end,concat_ws('&#','a_identity_number',nvl(string(a.identity_number),'值为null'),string(b.identity_number)),null),if(case when a.sdk_type is null and b.sdk_type is null then false else nvl(a.sdk_type != b.sdk_type, True) end,concat_ws('&#','a_sdk_type',nvl(string(a.sdk_type),'值为null'),string(b.sdk_type)),null),if(case when a.app_type is null and b.app_type is null then false else nvl(a.app_type != b.app_type, True) end,concat_ws('&#','a_app_type',nvl(string(a.app_type),'值为null'),string(b.app_type)),null),if(case when a.drools_inparam is null and b.drools_inparam is null then false else nvl(a.drools_inparam != b.drools_inparam, True) end,concat_ws('&#','a_drools_inparam',nvl(string(a.drools_inparam),'值为null'),string(b.drools_inparam)),null),if(case when a.drools_outparam is null and b.drools_outparam is null then false else nvl(a.drools_outparam != b.drools_outparam, True) end,concat_ws('&#','a_drools_outparam',nvl(string(a.drools_outparam),'值为null'),string(b.drools_outparam)),null),if(case when a.customized_data is null and b.customized_data is null then false else nvl(a.customized_data != b.customized_data, True) end,concat_ws('&#','a_customized_data',nvl(string(a.customized_data),'值为null'),string(b.customized_data)),null),if(case when a.model_version_decision is null and b.model_version_decision is null then false else nvl(a.model_version_decision != b.model_version_decision, True) end,concat_ws('&#','a_model_version_decision',nvl(string(a.model_version_decision),'值为null'),string(b.model_version_decision)),null),if(case when a.action_type is null and b.action_type is null then false else nvl(a.action_type != b.action_type, True) end,concat_ws('&#','a_action_type',nvl(string(a.action_type),'值为null'),string(b.action_type)),null),if(case when a.reject_tag is null and b.reject_tag is null then false else nvl(a.reject_tag != b.reject_tag, True) end,concat_ws('&#','a_reject_tag',nvl(string(a.reject_tag),'值为null'),string(b.reject_tag)),null),if(case when a.antifraud_cut is null and b.antifraud_cut is null then false else nvl(a.antifraud_cut != b.antifraud_cut, True) end,concat_ws('&#','a_antifraud_cut',nvl(string(a.antifraud_cut),'值为null'),string(b.antifraud_cut)),null),if(case when a.retrieve_cut is null and b.retrieve_cut is null then false else nvl(a.retrieve_cut != b.retrieve_cut, True) end,concat_ws('&#','a_retrieve_cut',nvl(string(a.retrieve_cut),'值为null'),string(b.retrieve_cut)),null),if(case when a.result_data is null and b.result_data is null then false else nvl(a.result_data != b.result_data, True) end,concat_ws('&#','a_result_data',nvl(string(a.result_data),'值为null'),string(b.result_data)),null),if(case when a.status is null and b.status is null then false else nvl(a.status != b.status, True) end,concat_ws('&#','a_status',nvl(string(a.status),'值为null'),string(b.status)),null),if(case when a.credits is null and b.credits is null then false else nvl(a.credits != b.credits, True) end,concat_ws('&#','a_credits',nvl(string(a.credits),'值为null'),string(b.credits)),null),if(case when a.dynamic_totalcredit is null and b.dynamic_total_credits is null then false else nvl(a.dynamic_totalcredit != b.dynamic_total_credits, True) end,concat_ws('&#','a_dynamic_totalcredit',nvl(string(a.dynamic_totalcredit),'值为null'),string(b.dynamic_total_credits)),null),if(case when a.risk_group is null and b.risk_group is null then false else nvl(a.risk_group != b.risk_group, True) end,concat_ws('&#','a_risk_group',nvl(string(a.risk_group),'值为null'),string(b.risk_group)),null),if(case when a.loan_tag is null and b.loan_tag is null then false else nvl(a.loan_tag != b.loan_tag, True) end,concat_ws('&#','a_loan_tag',nvl(string(a.loan_tag),'值为null'),string(b.loan_tag)),null),if(case when a.reloan_tag is null and b.reloan_tag is null then false else nvl(a.reloan_tag != b.reloan_tag, True) end,concat_ws('&#','a_reloan_tag',nvl(string(a.reloan_tag),'值为null'),string(b.reloan_tag)),null),if(case when a.expire_days is null and b.expire_days is null then false else nvl(a.expire_days != b.expire_days, True) end,concat_ws('&#','a_expire_days',nvl(string(a.expire_days),'值为null'),string(b.expire_days)),null),if(case when a.products is null and b.products is null then false else nvl(a.products != b.products, True) end,concat_ws('&#','a_products',nvl(string(a.products),'值为null'),string(b.products)),null),if(case when a.result_droolsdata is null and b.result_droolsdata is null then false else nvl(a.result_droolsdata != b.result_droolsdata, True) end,concat_ws('&#','a_result_droolsdata',nvl(string(a.result_droolsdata),'值为null'),string(b.result_droolsdata)),null),if(case when a.result_actiondata is null and b.result_actiondata is null then false else nvl(a.result_actiondata != b.result_actiondata, True) end,concat_ws('&#','a_result_actiondata',nvl(string(a.result_actiondata),'值为null'),string(b.result_actiondata)),null),if(case when a.if_offline_review is null and b.if_offline_review is null then false else nvl(a.if_offline_review != b.if_offline_review, True) end,concat_ws('&#','a_if_offline_review',nvl(string(a.if_offline_review),'值为null'),string(b.if_offline_review)),null),if(case when a.created_ts is null and b.created_ts is null then false else nvl(a.created_ts != b.created_ts, True) end,concat_ws('&#','a_created_ts',nvl(string(a.created_ts),'值为null'),string(b.created_ts)),null),if(case when a.updated_ts is null and b.updated_ts is null then false else nvl(a.updated_ts != b.updated_ts, True) end,concat_ws('&#','a_updated_ts',nvl(string(a.updated_ts),'值为null'),string(b.updated_ts)),null),if(case when a.trace_run_type is null and b.trace_run_type is null then false else nvl(a.trace_run_type != b.trace_run_type, True) end,concat_ws('&#','a_trace_run_type',nvl(string(a.trace_run_type),'值为null'),string(b.trace_run_type)),null),if(case when a.offline_type is null and b.offline_type is null then false else nvl(a.offline_type != b.offline_type, True) end,concat_ws('&#','a_offline_type',nvl(string(a.offline_type),'值为null'),string(b.offline_type)),null),if(case when a.scope_desc is null and b.scope_desc is null then false else nvl(a.scope_desc != b.scope_desc, True) end,concat_ws('&#','a_scope_desc',nvl(string(a.scope_desc),'值为null'),string(b.scope_desc)),null)) as diff from dwd.dwd_risk_df_risk_flow_trace_process as a inner join test.dwd_risk_df_risk_old_flow_decision as b on a.trace_id=b.trace_id where 1=1 and (case when a.trace_id is null and b.trace_id is null then false else nvl(a.trace_id != b.trace_id, True) end or case when a.risk_flow_id is null and b.risk_flow_id is null then false else nvl(a.risk_flow_id != b.risk_flow_id, True) end or case when a.flow_name is null and b.flow_name is null then false else nvl(a.flow_name != b.flow_name, True) end or case when a.scope is null and b.scope is null then false else nvl(a.scope != b.scope, True) end or case when a.event_id is null and b.event_id is null then false else nvl(a.event_id != b.event_id, True) end or case when a.event_name is null and b.event_name is null then false else nvl(a.event_name != b.event_name, True) end or case when a.user_info is null and b.user_info is null then false else nvl(a.user_info != b.user_info, True) end or case when a.order_id is null and b.order_id is null then false else nvl(a.order_id != b.order_id, True) end or case when a.loan_account_id is null and b.loan_account_id is null then false else nvl(a.loan_account_id != b.loan_account_id, True) end or case when a.mobile_number is null and b.mobile_number is null then false else nvl(a.mobile_number != b.mobile_number, True) end or case when a.identity_number is null and b.identity_number is null then false else nvl(a.identity_number != b.identity_number, True) end or case when a.sdk_type is null and b.sdk_type is null then false else nvl(a.sdk_type != b.sdk_type, True) end or case when a.app_type is null and b.app_type is null then false else nvl(a.app_type != b.app_type, True) end or case when a.drools_inparam is null and b.drools_inparam is null then false else nvl(a.drools_inparam != b.drools_inparam, True) end or case when a.drools_outparam is null and b.drools_outparam is null then false else nvl(a.drools_outparam != b.drools_outparam, True) end or case when a.customized_data is null and b.customized_data is null then false else nvl(a.customized_data != b.customized_data, True) end or case when a.model_version_decision is null and b.model_version_decision is null then false else nvl(a.model_version_decision != b.model_version_decision, True) end or case when a.action_type is null and b.action_type is null then false else nvl(a.action_type != b.action_type, True) end or case when a.reject_tag is null and b.reject_tag is null then false else nvl(a.reject_tag != b.reject_tag, True) end or case when a.antifraud_cut is null and b.antifraud_cut is null then false else nvl(a.antifraud_cut != b.antifraud_cut, True) end or case when a.retrieve_cut is null and b.retrieve_cut is null then false else nvl(a.retrieve_cut != b.retrieve_cut, True) end or case when a.result_data is null and b.result_data is null then false else nvl(a.result_data != b.result_data, True) end or case when a.status is null and b.status is null then false else nvl(a.status != b.status, True) end or case when a.credits is null and b.credits is null then false else nvl(a.credits != b.credits, True) end or case when a.dynamic_totalcredit is null and b.dynamic_total_credits is null then false else nvl(a.dynamic_totalcredit != b.dynamic_total_credits, True) end or case when a.risk_group is null and b.risk_group is null then false else nvl(a.risk_group != b.risk_group, True) end or case when a.loan_tag is null and b.loan_tag is null then false else nvl(a.loan_tag != b.loan_tag, True) end or case when a.reloan_tag is null and b.reloan_tag is null then false else nvl(a.reloan_tag != b.reloan_tag, True) end or case when a.expire_days is null and b.expire_days is null then false else nvl(a.expire_days != b.expire_days, True) end or case when a.products is null and b.products is null then false else nvl(a.products != b.products, True) end or case when a.result_droolsdata is null and b.result_droolsdata is null then false else nvl(a.result_droolsdata != b.result_droolsdata, True) end or case when a.result_actiondata is null and b.result_actiondata is null then false else nvl(a.result_actiondata != b.result_actiondata, True) end or case when a.if_offline_review is null and b.if_offline_review is null then false else nvl(a.if_offline_review != b.if_offline_review, True) end or case when a.created_ts is null and b.created_ts is null then false else nvl(a.created_ts != b.created_ts, True) end or case when a.updated_ts is null and b.updated_ts is null then false else nvl(a.updated_ts != b.updated_ts, True) end or case when a.trace_run_type is null and b.trace_run_type is null then false else nvl(a.trace_run_type != b.trace_run_type, True) end or case when a.offline_type is null and b.offline_type is null then false else nvl(a.offline_type != b.offline_type, True) end or case when a.scope_desc is null and b.scope_desc is null then false else nvl(a.scope_desc != b.scope_desc, True) end) and a.dt = '20221009' and 1=1) t lateral VIEW explode(split(diff, '&!')) tmp_diff as single_diff) as t group by t.single_diff;


-- 表单A存在表单B不存在明细
select a.trace_id as a_trace_id,a.risk_flow_id as a_risk_flow_id,a.flow_name as a_flow_name,a.scope as a_scope,a.event_id as a_event_id,a.event_name as a_event_name,a.user_info as a_user_info,a.order_id as a_order_id,a.loan_account_id as a_loan_account_id,a.mobile_number as a_mobile_number,a.identity_number as a_identity_number,a.sdk_type as a_sdk_type,a.app_type as a_app_type,a.drools_inparam as a_drools_inparam,a.drools_outparam as a_drools_outparam,a.customized_data as a_customized_data,a.model_version_decision as a_model_version_decision,a.action_type as a_action_type,a.reject_tag as a_reject_tag,a.antifraud_cut as a_antifraud_cut,a.retrieve_cut as a_retrieve_cut,a.result_data as a_result_data,a.status as a_status,a.credits as a_credits,a.dynamic_totalcredit as a_dynamic_totalcredit,a.risk_group as a_risk_group,a.loan_tag as a_loan_tag,a.reloan_tag as a_reloan_tag,a.expire_days as a_expire_days,a.products as a_products,a.result_droolsdata as a_result_droolsdata,a.result_actiondata as a_result_actiondata,a.if_offline_review as a_if_offline_review,a.created_ts as a_created_ts,a.updated_ts as a_updated_ts,a.trace_run_type as a_trace_run_type,a.offline_type as a_offline_type,a.scope_desc as a_scope_desc from dwd.dwd_risk_df_risk_flow_trace_process as a where not exists (select 1 from test.dwd_risk_df_risk_old_flow_decision as b where a.trace_id=b.trace_id and 1=1) and a.dt = '20221009';


-- 表单B存在表单A不存在明细
select b.trace_id as b_trace_id,b.risk_flow_id as b_risk_flow_id,b.flow_name as b_flow_name,b.scope as b_scope,b.event_id as b_event_id,b.event_name as b_event_name,b.user_info as b_user_info,b.order_id as b_order_id,b.loan_account_id as b_loan_account_id,b.mobile_number as b_mobile_number,b.identity_number as b_identity_number,b.sdk_type as b_sdk_type,b.app_type as b_app_type,b.drools_inparam as b_drools_inparam,b.drools_outparam as b_drools_outparam,b.customized_data as b_customized_data,b.model_version_decision as b_model_version_decision,b.action_type as b_action_type,b.reject_tag as b_reject_tag,b.antifraud_cut as b_antifraud_cut,b.retrieve_cut as b_retrieve_cut,b.result_data as b_result_data,b.status as b_status,b.credits as b_credits,b.dynamic_total_credits as b_dynamic_total_credits,b.risk_group as b_risk_group,b.loan_tag as b_loan_tag,b.reloan_tag as b_reloan_tag,b.expire_days as b_expire_days,b.products as b_products,b.result_droolsdata as b_result_droolsdata,b.result_actiondata as b_result_actiondata,b.if_offline_review as b_if_offline_review,b.created_ts as b_created_ts,b.updated_ts as b_updated_ts,b.trace_run_type as b_trace_run_type,b.offline_type as b_offline_type,b.scope_desc as b_scope_desc from test.dwd_risk_df_risk_old_flow_decision as b where not exists (select 1 from dwd.dwd_risk_df_risk_flow_trace_process as a where a.trace_id=b.trace_id and a.dt = '20221009') and 1=1;

